{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer pc\\\\Desktop\\\\Zelthy\\\\Assesment\\\\joble\\\\frontend\\\\my-app\\\\src\\\\Apply\\\\ViewApplicant.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ViewApplicant extends Component {\n  constructor(props) {\n    super(props);\n\n    this.applyJobFilter = () => {\n      let hostname = window.location.hostname;\n      var orders = document.getElementsByName(\"created-order\");\n      [...orders][0].selected = true;\n      var jobs = document.getElementsByName(\"job\");\n      let job = [...jobs].find(job => {\n        return job.selected === true;\n      }).value;\n      let filteredApplicants = [];\n\n      if (job !== \"all\") {\n        filteredApplicants = this.state.allApplicants.filter(applicant => {\n          return applicant.jobTitle === job;\n        });\n      } else {\n        filteredApplicants = this.state.allApplicants;\n      }\n\n      const output = filteredApplicants.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"userName\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"jobTitle\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"companyName\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"createdAt\"] ? new Date(item[\"createdAt\"]).toLocaleString() : \"Not specified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://\" + hostname + \":5000\" + item[\"resume\"],\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this);\n      });\n      this.setState({\n        applicants: output,\n        applicantsClean: filteredApplicants\n      });\n    };\n\n    this.sortCreatedTime = () => {\n      let hostname = window.location.hostname;\n      var orders = document.getElementsByName(\"created-order\");\n      let order = [...orders].find(order => {\n        return order.selected === true;\n      }).value;\n      const jobsArray = this.state.jobs;\n      const currApplicants = this.state.applicantsClean;\n      currApplicants.sort((a, b) => {\n        if (order == 0) {\n          return new Date(a.createdAt) - new Date(b.createdAt);\n        } else {\n          return new Date(b.createdAt) - new Date(a.createdAt);\n        }\n      });\n      const output = currApplicants.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"userName\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"jobTitle\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"companyName\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"createdAt\"] ? new Date(item[\"createdAt\"]).toLocaleString() : \"Not specified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://\" + hostname + \":5000\" + item[\"resume\"],\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this);\n      });\n      this.setState({\n        applicants: output,\n        jobs: jobsArray\n      });\n    };\n\n    this.state = {\n      companyName: this.props.companyName,\n      applicants: [],\n      allApplicants: [],\n      jobs: [],\n      applicantsClean: []\n    };\n    this.getApplications = this.getApplications.bind(this);\n    this.printApplicants = this.printApplicants.bind(this);\n    this.getApplications();\n  }\n\n  getApplications() {\n    axios.get(`/applications/applicant?companyName=${this.props.companyName}`).then(res => {\n      console.log(res);\n      this.applicants = res;\n      this.printApplicants(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  printApplicants(applicants) {\n    let hostname = window.location.hostname;\n    let jobsArray = [];\n    applicants.sort((a, b) => {\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n    applicants.forEach(applicant => {\n      if (jobsArray.indexOf(applicant.jobTitle) === -1) {\n        jobsArray.push(applicant.jobTitle);\n      }\n    });\n    const output = applicants.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"userName\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"jobTitle\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"companyName\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"createdAt\"] ? new Date(item[\"createdAt\"]).toLocaleString() : \"Not specified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://\" + hostname + \":5000\" + item[\"resume\"],\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    });\n    this.setState({\n      applicants: output,\n      allApplicants: applicants,\n      jobs: jobsArray,\n      applicantsClean: applicants\n    });\n  }\n\n  render() {\n    if (Array.isArray(this.state.applicants) && this.state.applicants.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"View Applicants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 35\n        }, this), this.props.companyName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Applicants!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"View Applicants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), !this.props.jobTitle && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"custom-select mr-sm-2\",\n                onChange: this.applyJobFilter,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"job\",\n                  value: \"all\",\n                  defaultValue: true,\n                  children: \"All Jobs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 17\n                }, this), this.state.jobs.map((job, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    name: \"job\",\n                    value: job,\n                    children: job\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 28\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), this.props.jobTitle && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"custom-select mr-sm-2\",\n                onChange: this.sortCreatedTime,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"created-order\",\n                  value: \"0\",\n                  defaultValue: true,\n                  children: \"Applied Time (earliest)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"created-order\",\n                  value: \"1\",\n                  children: \"Applied Time (latest)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.applicants\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/acer pc/Desktop/Zelthy/Assesment/joble/frontend/my-app/src/Apply/ViewApplicant.js"],"names":["React","Component","axios","ViewApplicant","constructor","props","applyJobFilter","hostname","window","location","orders","document","getElementsByName","selected","jobs","job","find","value","filteredApplicants","state","allApplicants","filter","applicant","jobTitle","output","map","item","index","Date","toLocaleString","setState","applicants","applicantsClean","sortCreatedTime","order","jobsArray","currApplicants","sort","a","b","createdAt","companyName","getApplications","bind","printApplicants","get","then","res","console","log","data","catch","err","forEach","indexOf","push","render","Array","isArray","length","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class ViewApplicant extends Component {\n  constructor(props){\n    super(props);\n\n    this.state  = {\n      companyName: this.props.companyName,\n      applicants: [],\n      allApplicants: [],\n      jobs: [],\n      applicantsClean: []\n    };\n\n    this.getApplications = this.getApplications.bind(this);\n    this.printApplicants = this.printApplicants.bind(this);\n    this.getApplications();\n  }\n\n  getApplications() {\n    axios.get(`/applications/applicant?companyName=${this.props.companyName}`)\n      .then(res => {\n        console.log(res);\n        this.applicants = res;\n        this.printApplicants(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  printApplicants(applicants) {\n\n    let hostname = window.location.hostname;\n    let jobsArray = [];\n\n    applicants.sort((a, b) => {\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n\n    applicants.forEach((applicant) => {\n      if(jobsArray.indexOf(applicant.jobTitle) === -1) {\n        jobsArray.push(applicant.jobTitle);\n      }\n    });\n\n    const output = applicants.map((item,index) => {\n      return (\n        <tr key={index}>\n          <td>\n            { item[\"userName\"] }\n          </td>\n          <td>\n            { item[\"jobTitle\"] }\n          </td>\n          <td>\n            { item[\"companyName\"] }\n          </td>\n          <td>\n            { item[\"createdAt\"] ? new Date(item[\"createdAt\"]).toLocaleString() : \"Not specified\"}\n          </td>\n          <td>\n            <a href={ \"http://\" + hostname + \":5000\" + item[\"resume\"] }>View</a>\n          </td>\n        </tr>\n      )\n    })\n    this.setState({\n      applicants: output,\n      allApplicants: applicants,\n      jobs: jobsArray,\n      applicantsClean: applicants\n    });\n  }\n\n  applyJobFilter = () => {\n    let hostname = window.location.hostname;\n    var orders = document.getElementsByName(\"created-order\");\n    [...orders][0].selected = true;\n\n    var jobs = document.getElementsByName(\"job\");\n    let job = [...jobs].find((job) => {\n      return (job.selected === true)\n    }).value;\n\n    let filteredApplicants = [];\n    if (job !== \"all\") {\n      filteredApplicants = this.state.allApplicants.filter((applicant) => {\n        return applicant.jobTitle === job;\n      });\n    } else {\n      filteredApplicants = this.state.allApplicants;\n    }\n\n    const output = filteredApplicants.map((item,index) => {\n      return (\n        <tr key={index}>\n          <td>\n            { item[\"userName\"] }\n          </td>\n          <td>\n            { item[\"jobTitle\"] }\n          </td>\n          <td>\n            { item[\"companyName\"] }\n          </td>\n          <td>\n            { item[\"createdAt\"] ? new Date(item[\"createdAt\"]).toLocaleString() : \"Not specified\"}\n          </td>\n          <td>\n            <a href={ \"http://\" + hostname + \":5000\" + item[\"resume\"] }>View</a>\n          </td>\n        </tr>\n      )\n    });\n\n    this.setState({\n      applicants: output,\n      applicantsClean: filteredApplicants,\n    });\n  }\n\n  sortCreatedTime = () => {\n    let hostname = window.location.hostname;\n    var orders = document.getElementsByName(\"created-order\");\n    let order = [...orders].find((order) => {\n      return (order.selected === true)\n    }).value;\n\n    const jobsArray = this.state.jobs;\n    const currApplicants = this.state.applicantsClean;\n    currApplicants.sort((a, b) => {\n      if (order == 0) {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      } else {\n        return new Date(b.createdAt) - new Date(a.createdAt);\n      }\n    });\n\n    const output = currApplicants.map((item,index) => {\n      return (\n        <tr key={index}>\n          <td>\n            { item[\"userName\"] }\n          </td>\n          <td>\n            { item[\"jobTitle\"] }\n          </td>\n          <td>\n            { item[\"companyName\"] }\n          </td>\n          <td>\n            { item[\"createdAt\"] ? new Date(item[\"createdAt\"]).toLocaleString() : \"Not specified\"}\n          </td>\n          <td>\n            <a href={ \"http://\" + hostname + \":5000\" + item[\"resume\"] }>View</a>\n          </td>\n        </tr>\n      )\n    });\n\n    this.setState({\n      applicants: output,\n      jobs: jobsArray,\n    });\n  }\n\n  render() {\n    if(Array.isArray(this.state.applicants) && this.state.applicants.length === 0) {\n      return (\n        <div className=\"container\">\n          <h1>View Applicants</h1><br />\n          {this.props.companyName && <p>No Applicants!</p>}\n        </div>\n      );\n    }\n    return (\n      <div className=\"container\">\n        <h1>View Applicants</h1>\n        <br/>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>User Name</th>\n              {! this.props.jobTitle &&\n              <th>\n              <select className=\"custom-select mr-sm-2\" onChange={this.applyJobFilter}>\n                <option name=\"job\" value=\"all\" defaultValue>All Jobs</option>\n                {\n                  this.state.jobs.map((job, i) => {\n                    return <option name=\"job\" value={job} key={i}>{job}</option>\n                  })\n                }\n              </select>\n              </th>\n              }\n              {this.props.jobTitle &&\n              <th>Job Title</th>\n              }\n              <th>Company Name</th>\n              <th>\n              <select className=\"custom-select mr-sm-2\" onChange={this.sortCreatedTime}>\n                <option name=\"created-order\" value=\"0\" defaultValue>Applied Time (earliest)</option>\n                <option name=\"created-order\" value=\"1\" >Applied Time (latest)</option>\n              </select>\n              </th>\n              <th>Resume</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.state.applicants }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}