{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer pc\\\\Desktop\\\\Zelthy\\\\Assesment\\\\joble\\\\frontend\\\\my-app\\\\src\\\\Login\\\\RegisterForm.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./RegisterForm.css\";\nexport default class RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserNameChange = event => {\n      this.setState({\n        userName: event.target.value\n      });\n      axios.post(\"/users/validateUserName\", {\n        userName: event.target.value\n      }).then(res => {\n        console.log(\"Username \", res.data.userName, \" exists!\");\n      }).catch(err => {\n        if (this.state.userName.length > 3 && this.state.userName !== \"\") {\n          console.log(\"Valid Username!\");\n        } else {\n          console.log(\"Invalid Username\");\n        }\n      });\n    };\n\n    this.handleUserPasswordChange = event => {\n      this.setState({\n        userPassword: event.target.value\n      });\n    };\n\n    this.handleUserTypeChange = event => {\n      this.setState({\n        userType: event.target.value\n      });\n      this.setState({\n        companyName: \"\"\n      });\n\n      if (event.target.value === \"recruiter\") {\n        this.getExistingCompanies();\n      } else {\n        this.setState({\n          showNewCompanyForm: false,\n          isCompanyNew: false\n        });\n      }\n    };\n\n    this.getExistingCompanies = () => {\n      axios.get(\"/companies/getCompanies\").then(res => {\n        console.log(res.data, \" is in the database\");\n        this.setState({\n          companies: res.data\n        });\n        console.log(\"companies in state:\", this.state.companies);\n      }).catch(err => {\n        console.log('error occured during companies retrieval');\n      });\n    };\n\n    this.handleCompanyNameChange = event => {\n      if (event.target.value === \"registerNewCompany\") {\n        this.setState({\n          showNewCompanyForm: true,\n          isCompanyNew: true,\n          companyName: \"\"\n        });\n      } else {\n        this.setState({\n          showNewCompanyForm: false,\n          isCompanyNew: false\n        });\n        this.setState({\n          companyName: event.target.value\n        });\n        console.log(\"companyName selected:\", event.target.value);\n      }\n    };\n\n    this.handleNewCompanyNameChange = event => {\n      this.setState({\n        isCompanyNew: true,\n        companyName: event.target.value\n      });\n      console.log(\"new companyName selected:\", event.target.value);\n    };\n\n    this.handleCompanyWebsiteChange = event => {\n      this.setState({\n        companyWebsite: event.target.value\n      }, () => {// console.log(event.target.value);\n      });\n    };\n\n    this.handleCompanyTypeChange = event => {\n      this.setState({\n        companyType: event.target.value\n      }, () => {// console.log(event.target.value);\n      });\n    };\n\n    this.handleCompanySizeChange = event => {\n      this.setState({\n        companySize: event.target.value\n      }, () => {// console.log(event.target.value);\n      });\n    };\n\n    this.handleCompanyHeadquatersChange = event => {\n      this.setState({\n        companyHeadquaters: event.target.value\n      }, () => {// console.log(event.target.value);\n      });\n    };\n\n    this.handleCompanyFoundedChange = event => {\n      this.setState({\n        companyFounded: event.target.value\n      }, () => {// console.log(event.target.value);\n      });\n    };\n\n    this.handleCompanySectorChange = event => {\n      this.setState({\n        companySector: event.target.value\n      }, () => {// console.log(event.target.value);\n      });\n    };\n\n    this.handleCompanyAboutChange = event => {\n      this.setState({\n        companyAbout: event.target.value\n      }, () => {// console.log(event.target.value);\n      });\n    };\n\n    this.onSuccessful_Register = () => {\n      this.props.onSuccessful_Register();\n    };\n\n    this.handleRegister = event => {\n      event.preventDefault();\n      const user = {\n        userName: this.state.userName,\n        userPassword: this.state.userPassword,\n        userType: this.state.userType,\n        companyName: this.state.companyName,\n        loginStatus: this.state.loginStatus\n      };\n      const company = {\n        companyName: this.state.companyName,\n        companyWebsite: this.state.companyWebsite,\n        companyType: this.state.companyType,\n        companySize: this.state.companySize,\n        companyHeadquaters: this.state.companyHeadquaters,\n        companyFounded: this.state.companyFounded,\n        companySector: this.state.companySector,\n        companyAbout: this.state.companyAbout,\n        companyJobs: [],\n        companyReviews: []\n      };\n\n      if (user.userType === \"recruiter\") {\n        console.log(\"Is it a new company?\", this.state.isCompanyNew);\n      } // Add a student or recruiter with known company\n\n\n      if (user.userType === \"student\" || user.userType === \"recruiter\" && !this.state.isCompanyNew) {\n        axios.post(\"/users/add\", user).then(res => {\n          console.log(res.data.userName, \" registered!\");\n          this.onSuccessful_Register(); // show dashboard\n        }).catch(err => {\n          console.log(\"An error occured during user registration\\n\", err);\n          alert(\"User Registration Failed\");\n          axios.post(\"/users/delete\", user).then(res => {\n            console.log(\"User registration is undone\");\n          }).catch(err => {\n            console.log(\"User registration couldn't be undone\", err);\n            alert(\"Recruiter rollback failed\");\n          });\n        });\n      } else if (user.userType === \"recruiter\" && this.state.isCompanyNew) {\n        // First add user\n        axios.post(\"/users/add\", user).then(res => {\n          // If user registration goes through, then add company\n          console.log(\"User \", res.data.userName, \" registered!\");\n          axios.post(\"/companies/add\", company).then(res => {\n            console.log(\"Company \", res.data.companyName, \" registered!\");\n            this.onSuccessful_Register();\n          }).catch(err => {\n            console.log(\"An error occured during company registration\\n\", err);\n            alert(\"Company Registration Failed\");\n            axios.post(\"/users/delete\", user).then(res => {\n              console.log(\"User registration is undone\");\n            }).catch(err => {\n              console.log(\"User registration couldn't be undone\", err);\n              alert(\"Recruiter rollback failed\");\n            });\n          });\n        }).catch(err => {\n          console.log(\"An error occured during user registration\\n\", err);\n          alert(\"User Registration Failed\");\n        });\n      }\n    };\n\n    this.onCancelClick = () => {\n      this.props.onLoginClick();\n    };\n\n    this.state = {\n      userName: \"\",\n      userPassword: \"\",\n      userType: \"student\",\n      loginStatus: \"offline\",\n      companyName: \"\",\n      showNewCompanyForm: false,\n      isCompanyNew: true,\n      companyWebsite: \"\",\n      companyType: \"\",\n      companySize: \"\",\n      companyHeadquaters: \"\",\n      companyFounded: \"\",\n      companySector: \"\",\n      companyAbout: \"\",\n      companies: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"RegisterFrom componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"RegisterFrom componentwillunmount\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"myRegisterForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, \"Username (min. 4 characters)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"userName\",\n      value: this.state.userName,\n      onChange: this.handleUserNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, \"Password (min. 4 characters)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control registerform-control\",\n      id: \"userPassword\",\n      value: this.state.userPassword,\n      onChange: this.handleUserPasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"Occupation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    }, \"Occupation\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control registerform-control\",\n      id: \"userType\",\n      value: this.state.userType,\n      onChange: this.handleUserTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, \"Student\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"recruiter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, \"Recruiter\"))), this.state.userType === \"recruiter\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, !this.state.showNewCompanyForm && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companyName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, \"Company Name\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control registerform-control\",\n      id: \"companyName\",\n      onChange: this.handleCompanyNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, \"Select one\"), this.state.companies.map(company => /*#__PURE__*/React.createElement(\"option\", {\n      key: company._id,\n      value: company.companyName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 64\n      }\n    }, company.companyName)), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"registerNewCompany\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }, \"Create one\"))), this.state.showNewCompanyForm && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companyName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 23\n      }\n    }, \"Company Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"companyName\",\n      value: this.state.companyName,\n      onChange: this.handleNewCompanyNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companyWebsite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 23\n      }\n    }, \"Company Website\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"companyWebsite\",\n      value: this.state.companyWebsite,\n      onChange: this.handleCompanyWebsiteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companyType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 23\n      }\n    }, \"Company Type\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"companyType\",\n      value: this.state.companyType,\n      onChange: this.handleCompanyTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companySize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 23\n      }\n    }, \"Company Size\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control registerform-control\",\n      id: \"companySize\",\n      value: this.state.companySize,\n      onChange: this.handleCompanySizeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Self-employed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }, \"A: Self-employed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1-10 employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, \"B: 1-10 employees\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"11-50 employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }, \"C: 11-50 employees\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"51-200 employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }\n    }, \"D: 51-200 employees\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"201-500 employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }\n    }, \"E: 201-500 employees\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"501-1000 employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, \"F: 501-1000 employees\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1001-5000 employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 25\n      }\n    }, \"G: 1001-5000 employees\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5001-10,000 employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 25\n      }\n    }, \"H: 5001-10,000 employees\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10,001+ employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    }, \"I: 10,001+ employees\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companyHeadquaters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 23\n      }\n    }, \"Headquaters Location\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"\",\n      value: this.state.companyHeadquaters,\n      onChange: this.handleCompanyHeadquatersChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companyFounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 23\n      }\n    }, \"Year Founded\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"companyFounded\",\n      value: this.state.companyFounded,\n      onChange: this.handleCompanyFoundedChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companySector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 23\n      }\n    }, \"Sector\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"companySector\",\n      value: this.state.companySector,\n      onChange: this.handleCompanySectorChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group  registerform-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"registerform-label col\",\n      htmlFor: \"companyAbout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, \"About Your Company\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control registerform-control\",\n      id: \"companyAbout\",\n      value: this.state.companyAbout,\n      onChange: this.handleCompanyAboutChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    })))) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success registerform-btn\",\n      onClick: this.handleRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary registerform-btn\",\n      onClick: this.onCancelClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/acer pc/Desktop/Zelthy/Assesment/joble/frontend/my-app/src/Login/RegisterForm.js"],"names":["React","Component","axios","RegisterForm","constructor","props","handleUserNameChange","event","setState","userName","target","value","post","then","res","console","log","data","catch","err","state","length","handleUserPasswordChange","userPassword","handleUserTypeChange","userType","companyName","getExistingCompanies","showNewCompanyForm","isCompanyNew","get","companies","handleCompanyNameChange","handleNewCompanyNameChange","handleCompanyWebsiteChange","companyWebsite","handleCompanyTypeChange","companyType","handleCompanySizeChange","companySize","handleCompanyHeadquatersChange","companyHeadquaters","handleCompanyFoundedChange","companyFounded","handleCompanySectorChange","companySector","handleCompanyAboutChange","companyAbout","onSuccessful_Register","handleRegister","preventDefault","user","loginStatus","company","companyJobs","companyReviews","alert","onCancelClick","onLoginClick","componentDidMount","componentWillUnmount","render","map","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./RegisterForm.css\"\n\nexport default class RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: \"\",\n      userPassword: \"\",\n      userType: \"student\",\n      loginStatus: \"offline\",\n      companyName: \"\",\n      showNewCompanyForm: false,\n      isCompanyNew: true,\n      companyWebsite: \"\",\n      companyType: \"\",\n      companySize: \"\",\n      companyHeadquaters: \"\",\n      companyFounded: \"\",\n      companySector: \"\",\n      companyAbout: \"\",\n      companies: [],\n    };\n  }\n\n  handleUserNameChange = event => {\n    this.setState({ userName: event.target.value });\n    axios\n      .post(\"/users/validateUserName\", { userName: event.target.value })\n      .then(res => {\n        console.log(\"Username \", res.data.userName, \" exists!\");\n      })\n      .catch(err => {\n        if (this.state.userName.length > 3 && this.state.userName !== \"\") {\n          console.log(\"Valid Username!\");\n        } else {\n          console.log(\"Invalid Username\");\n        }\n      });\n  };\n\n  handleUserPasswordChange = event => {\n    this.setState({ userPassword: event.target.value });\n  };\n\n  handleUserTypeChange = event => {\n    this.setState({ userType: event.target.value });\n    this.setState({ companyName: \"\" });\n\n    if(event.target.value === \"recruiter\"){\n      this.getExistingCompanies();\n    }else{\n      this.setState({\n        showNewCompanyForm: false,\n        isCompanyNew: false,\n      })\n    }\n  };\n\n  getExistingCompanies = () => {\n      axios\n        .get(\"/companies/getCompanies\")\n        .then(res => {\n          console.log(res.data, \" is in the database\");\n      \n          this.setState({\n            companies: res.data\n          })\n  \n          console.log(\"companies in state:\", this.state.companies);\n  \n        })\n        .catch(err => {\n          console.log('error occured during companies retrieval');\n        });\n  }\n\n  handleCompanyNameChange = event => {\n    \n    if(event.target.value === \"registerNewCompany\"){\n      this.setState({\n        showNewCompanyForm: true,\n        isCompanyNew: true,\n        companyName: \"\"\n      })\n    }else{\n      this.setState({\n        showNewCompanyForm: false,\n        isCompanyNew: false,\n      })\n\n      this.setState({\n        companyName: event.target.value,\n      });\n      console.log(\"companyName selected:\", event.target.value);\n    }\n\n  };\n\n  handleNewCompanyNameChange = event => {\n    this.setState({\n      isCompanyNew: true,\n      companyName: event.target.value,\n    });\n    console.log(\"new companyName selected:\", event.target.value);\n  }\n\n\n  handleCompanyWebsiteChange = event => {\n    this.setState({ companyWebsite: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyTypeChange = event => {\n    this.setState({ companyType: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanySizeChange = event => {\n    this.setState({ companySize: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyHeadquatersChange = event => {\n    this.setState({ companyHeadquaters: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyFoundedChange = event => {\n    this.setState({ companyFounded: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanySectorChange = event => {\n    this.setState({ companySector: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyAboutChange = event => {\n    this.setState({ companyAbout: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  onSuccessful_Register = () => {\n    this.props.onSuccessful_Register();\n  };\n\n  componentDidMount() {\n    console.log(\"RegisterFrom componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"RegisterFrom componentwillunmount\");\n  }\n\n  handleRegister = event => {\n    event.preventDefault();\n    const user = {\n      userName: this.state.userName,\n      userPassword: this.state.userPassword,\n      userType: this.state.userType,\n      companyName: this.state.companyName,\n      loginStatus: this.state.loginStatus\n    };\n    const company = {\n      companyName: this.state.companyName,\n      companyWebsite: this.state.companyWebsite,\n      companyType: this.state.companyType,\n      companySize: this.state.companySize,\n      companyHeadquaters: this.state.companyHeadquaters,\n      companyFounded: this.state.companyFounded,\n      companySector: this.state.companySector,\n      companyAbout: this.state.companyAbout,\n      companyJobs: [],\n      companyReviews: []\n    };\n\n    if (user.userType === \"recruiter\") {\n      console.log(\"Is it a new company?\", this.state.isCompanyNew);\n    }\n\n    // Add a student or recruiter with known company\n    if (\n      user.userType === \"student\" ||\n      (user.userType === \"recruiter\" && !this.state.isCompanyNew)\n    ) {\n      axios\n        .post(\"/users/add\", user)\n        .then(res => {\n          console.log(res.data.userName, \" registered!\");\n          this.onSuccessful_Register(); // show dashboard\n        })\n        .catch(err => {\n          console.log(\"An error occured during user registration\\n\", err);\n          alert(\"User Registration Failed\");\n          axios\n            .post(\"/users/delete\", user)\n            .then(res => {\n              console.log(\"User registration is undone\");\n            })\n            .catch(err => {\n              console.log(\"User registration couldn't be undone\", err);\n              alert(\"Recruiter rollback failed\");\n            });\n        });\n    } else if (user.userType === \"recruiter\" && this.state.isCompanyNew) {\n      // First add user\n      axios\n        .post(\"/users/add\", user)\n        .then(res => {\n          // If user registration goes through, then add company\n          console.log(\"User \", res.data.userName, \" registered!\");\n          axios\n            .post(\"/companies/add\", company)\n            .then(res => {\n              console.log(\"Company \", res.data.companyName, \" registered!\");\n              this.onSuccessful_Register();\n            })\n            .catch(err => {\n              console.log(\n                \"An error occured during company registration\\n\",\n                err\n              );\n              alert(\"Company Registration Failed\");\n              axios\n                .post(\"/users/delete\", user)\n                .then(res => {\n                  console.log(\"User registration is undone\");\n                })\n                .catch(err => {\n                  console.log(\"User registration couldn't be undone\", err);\n                  alert(\"Recruiter rollback failed\");\n                });\n            });\n        })\n        .catch(err => {\n          console.log(\"An error occured during user registration\\n\", err);\n          alert(\"User Registration Failed\");\n        });\n    }\n  };\n\n  onCancelClick = () => {\n    this.props.onLoginClick();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <form className=\"myRegisterForm\">\n            <div className=\"form-group  registerform-group row\">\n              <label className=\"registerform-label col\" htmlFor=\"Username\">Username (min. 4 characters)</label>\n              <input\n                type=\"text\"\n                className=\"form-control registerform-control\"\n                id=\"userName\"\n                value={this.state.userName}\n                onChange={this.handleUserNameChange}\n              />\n            </div>\n            <div className=\"form-group  registerform-group row\">\n              <label className=\"registerform-label col\" htmlFor=\"Password\">Password (min. 4 characters)</label>\n              <input\n                type=\"password\"\n                className=\"form-control registerform-control\"\n                id=\"userPassword\"\n                value={this.state.userPassword}\n                onChange={this.handleUserPasswordChange}\n              />\n            </div>\n            <div className=\"form-group  registerform-group row\">\n              <label className=\"registerform-label col\" htmlFor=\"Occupation\">Occupation</label>\n              <select\n                className=\"form-control registerform-control\"\n                id=\"userType\"\n                value={this.state.userType}\n                onChange={this.handleUserTypeChange}\n              >\n                <option value=\"student\">Student</option>\n                <option value=\"recruiter\">Recruiter</option>\n              </select>\n            </div>\n\n            {(this.state.userType === \"recruiter\") ? (\n              <div>\n                {!this.state.showNewCompanyForm &&\n                  <div className=\"form-group  registerform-group row\">\n                    <label className=\"registerform-label col\" htmlFor=\"companyName\">Company Name</label>\n                    <select\n                        className=\"form-control registerform-control\"\n                        id=\"companyName\"\n                        onChange={this.handleCompanyNameChange}\n                      >\n                        <option disabled selected>Select one</option>\n                        {this.state.companies.map((company) => <option key={company._id} value={company.companyName}>{company.companyName}</option>)}\n                        <option value=\"registerNewCompany\">Create one</option>\n                      </select>\n                  </div>\n                }\n                {this.state.showNewCompanyForm &&\n                <div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyName\">Company Name</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyName\"\n                        value={this.state.companyName}\n                        onChange={this.handleNewCompanyNameChange}\n                      />\n                    </div>     \n    \n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyWebsite\">Company Website</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyWebsite\"\n                        value={this.state.companyWebsite}\n                        onChange={this.handleCompanyWebsiteChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyType\">Company Type</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyType\"\n                        value={this.state.companyType}\n                        onChange={this.handleCompanyTypeChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companySize\">Company Size</label>\n                      <select\n                        className=\"form-control registerform-control\"\n                        id=\"companySize\"\n                        value={this.state.companySize}\n                        onChange={this.handleCompanySizeChange}\n                      >\n                        <option value=\"Self-employed\">A: Self-employed</option>\n                        <option value=\"1-10 employees\">B: 1-10 employees</option>\n                        <option value=\"11-50 employees\">C: 11-50 employees</option>\n                        <option value=\"51-200 employees\">D: 51-200 employees</option>\n                        <option value=\"201-500 employees\">\n                          E: 201-500 employees\n                        </option>\n                        <option value=\"501-1000 employees\">\n                          F: 501-1000 employees\n                        </option>\n                        <option value=\"1001-5000 employees\">\n                          G: 1001-5000 employees\n                        </option>\n                        <option value=\"5001-10,000 employees\">\n                          H: 5001-10,000 employees\n                        </option>\n                        <option value=\"10,001+ employees\">\n                          I: 10,001+ employees\n                        </option>\n                      </select>\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyHeadquaters\">Headquaters Location</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"\"\n                        value={this.state.companyHeadquaters}\n                        onChange={this.handleCompanyHeadquatersChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyFounded\">Year Founded</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyFounded\"\n                        value={this.state.companyFounded}\n                        onChange={this.handleCompanyFoundedChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companySector\">Sector</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companySector\"\n                        value={this.state.companySector}\n                        onChange={this.handleCompanySectorChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                    <label className=\"registerform-label col\" htmlFor=\"companyAbout\">About Your Company</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control registerform-control\"\n                      id=\"companyAbout\"\n                      value={this.state.companyAbout}\n                      onChange={this.handleCompanyAboutChange}\n                    />\n                    </div>\n                </div> \n                }\n                </div>\n              ):null}\n\n            <button\n              type=\"button\"\n              className=\"btn btn-success registerform-btn\"\n              onClick={this.handleRegister}\n            >\n              Register\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-primary registerform-btn\"\n              onClick={this.onCancelClick}\n            >\n              Cancel\n            </button>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}