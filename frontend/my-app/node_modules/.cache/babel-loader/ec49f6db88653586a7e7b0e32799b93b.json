{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer pc\\\\Desktop\\\\Zelthy\\\\Assesment\\\\joble\\\\frontend\\\\my-app\\\\src\\\\Jobs\\\\EditJob.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './CreateJob.css';\n\nfunction Location(address, city, pr, pcode) {\n  this.address = address;\n  this.city = city;\n  this.province = pr;\n  this.postalCode = pcode;\n}\n\nexport default class EditJob extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleJobDesc = event => {\n      this.setState({\n        jobDesc: event.target.value\n      });\n    };\n\n    this.handleSalary = event => {\n      this.setState({\n        salary: event.target.value\n      });\n    };\n\n    this.handleDeadline = event => {\n      console.log(event.target.value);\n      this.setState({\n        deadline: event.target.value\n      });\n    };\n\n    this.handleLocation = e => {\n      const {\n        location\n      } = { ...this.state\n      };\n      const currentLocation = location;\n      const {\n        name,\n        value\n      } = e.target;\n      currentLocation[name] = value;\n      this.setState({\n        location: currentLocation\n      });\n    };\n\n    this.handleJobCreation = event => {\n      console.log(this.state);\n      event.preventDefault();\n      const job = {\n        companyName: this.props.currJob.companyName,\n        jobTitle: this.props.currJob.jobTitle,\n        jobDesc: this.state.jobDesc,\n        salary: this.state.salary,\n        location: this.state.location,\n        deadline: this.state.deadline\n      };\n      axios.post('/jobs/editJob', job).then(res => {\n        console.log(res.data);\n        document.getElementById(\"jobPostingMessage\").style.color = \"green\";\n        this.setState({\n          jobTitle: '',\n          jobDesc: '',\n          salary: '',\n          location: new Location(\"\", \"\", \"\", \"\", \"\"),\n          deadline: \"\",\n          jobPostingMessage: \"Changes successfully saved!\"\n        });\n      }).catch(err => {\n        // display error message\n        document.getElementById(\"jobPostingMessage\").style.color = \"red\";\n        this.setState({\n          jobPostingMessage: \"There was an error editing the job. Please try again.\"\n        });\n      }).finally(() => {\n        window.scrollTo(0, 0);\n      }); // redirect the user back to their homepage after adding the job-- if this is the default page then reset the form\n      // window.location = \"/\";\n    };\n\n    this.state = {\n      jobTitle: this.props.currJob.jobTitle,\n      jobDesc: this.props.currJob.jobDesc,\n      salary: this.props.currJob.salary,\n      location: this.props.currJob.location,\n      jobPostingMessage: \"\",\n      deadline: this.props.currJob.deadline\n    };\n    this.handleJobDesc = this.handleJobDesc.bind(this);\n    this.handleSalary = this.handleSalary.bind(this);\n    this.handleLocation = this.handleLocation.bind(this);\n    this.handleJobCreation = this.handleJobCreation.bind(this);\n    this.handleDeadline = this.handleDeadline.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Edit Job posting\"), /*#__PURE__*/React.createElement(\"h5\", {\n      id: \"jobPostingMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, this.state.jobPostingMessage), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"myForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"CompanyName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Company Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      disabled: true,\n      className: \"form-control\",\n      id: \"companyName\",\n      value: this.props.currJob.companyName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"CompanyName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, \"Job Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      disabled: true,\n      className: \"form-control\",\n      id: \"jobTitle\",\n      value: this.state.jobTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"JobDesc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Job Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: \"75\",\n      className: \"form-control\",\n      id: \"jobDesc\",\n      value: this.state.jobDesc,\n      onChange: this.handleJobDesc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Street\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"address\",\n      value: this.state.location.address,\n      onChange: this.handleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"city\",\n      value: this.state.location.city,\n      onChange: this.handleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Province\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"province\",\n      value: this.state.location.province,\n      onChange: this.handleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"postalCode\",\n      value: this.state.location.postalCode,\n      onChange: this.handleLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Salary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Salary per month\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"$CAD\",\n      id: \"SALARY\",\n      value: this.state.salary,\n      onChange: this.handleSalary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Salary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"Deadline\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: \"deadline\",\n      value: this.state.deadline,\n      onChange: this.handleDeadline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.handleJobCreation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Edit Job\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/acer pc/Desktop/Zelthy/Assesment/joble/frontend/my-app/src/Jobs/EditJob.js"],"names":["React","Component","axios","Location","address","city","pr","pcode","province","postalCode","EditJob","constructor","props","handleJobDesc","event","setState","jobDesc","target","value","handleSalary","salary","handleDeadline","console","log","deadline","handleLocation","e","location","state","currentLocation","name","handleJobCreation","preventDefault","job","companyName","currJob","jobTitle","post","then","res","data","document","getElementById","style","color","jobPostingMessage","catch","err","finally","window","scrollTo","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './CreateJob.css';\n\nfunction Location(address, city, pr, pcode) {\n    this.address = address;\n    this.city = city;\n    this.province = pr;\n    this.postalCode = pcode;\n}\n\nexport default class EditJob extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            jobTitle: this.props.currJob.jobTitle,\n            jobDesc: this.props.currJob.jobDesc,\n            salary: this.props.currJob.salary,\n            location: this.props.currJob.location,\n            jobPostingMessage: \"\",\n            deadline: this.props.currJob.deadline,\n        }\n\n        this.handleJobDesc = this.handleJobDesc.bind(this);\n        this.handleSalary = this.handleSalary.bind(this);\n        this.handleLocation = this.handleLocation.bind(this);\n        this.handleJobCreation = this.handleJobCreation.bind(this);\n        this.handleDeadline = this.handleDeadline.bind(this);\n    }\n\n    handleJobDesc = (event) => {\n        this.setState({jobDesc: event.target.value});\n    }\n\n    handleSalary = (event) => {\n        this.setState({salary: event.target.value});\n    }\n\n    handleDeadline = (event) => {\n        console.log( event.target.value);\n        this.setState({deadline: event.target.value});\n    }\n\n    handleLocation = (e) => {\n\n        const { location } = { ...this.state };\n        const currentLocation = location;\n        const { name, value } = e.target;\n\n        currentLocation[name] = value;\n\n        this.setState({ location: currentLocation });\n    }\n\n    handleJobCreation = (event) => {\n        console.log(this.state);\n        event.preventDefault();\n\n        const job = {\n            companyName: this.props.currJob.companyName,\n            jobTitle: this.props.currJob.jobTitle,\n            jobDesc: this.state.jobDesc,\n            salary: this.state.salary,\n            location: this.state.location,\n            deadline: this.state.deadline\n        }\n\n        axios.post('/jobs/editJob', job)\n            .then((res) => {\n                console.log(res.data);\n                document.getElementById(\"jobPostingMessage\").style.color = \"green\";\n                this.setState({\n                    jobTitle: '',\n                    jobDesc: '',\n                    salary: '',\n                    location: new Location(\"\", \"\", \"\", \"\", \"\"),\n                    deadline: \"\",\n                    jobPostingMessage: \"Changes successfully saved!\",\n                });\n            })\n            .catch((err) => {\n                // display error message\n                document.getElementById(\"jobPostingMessage\").style.color = \"red\";\n                this.setState({\n                    jobPostingMessage: \"There was an error editing the job. Please try again.\",\n                });\n            })\n            .finally(() => {\n                window.scrollTo(0, 0);\n            });\n\n        // redirect the user back to their homepage after adding the job-- if this is the default page then reset the form\n        // window.location = \"/\";\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Edit Job posting</h1>\n                <h5 id=\"jobPostingMessage\">{this.state.jobPostingMessage}</h5>\n                <form className=\"myForm\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"CompanyName\">Company Name</label>\n                        <input type=\"text\" disabled className=\"form-control\" id=\"companyName\" value={this.props.currJob.companyName} />\n\n                        <label htmlFor=\"CompanyName\">Job Title</label>\n                        <input type=\"text\" disabled className=\"form-control\" id=\"jobTitle\" value={this.state.jobTitle} />\n\n                        <label htmlFor=\"JobDesc\">Job Description</label>\n                        <textarea rows=\"10\" cols=\"75\" className=\"form-control\" id=\"jobDesc\" value={this.state.jobDesc} onChange={this.handleJobDesc} />\n\n                        <label htmlFor=\"Location\">Street</label>\n                        <input type=\"text\" className=\"form-control\" name=\"address\" value={this.state.location.address} onChange={this.handleLocation} />\n                        <label htmlFor=\"Location\">City</label>\n                        <input type=\"text\" className=\"form-control\" name=\"city\" value={this.state.location.city} onChange={this.handleLocation} />\n                        <label htmlFor=\"Location\">Province</label>\n                        <input type=\"text\" className=\"form-control\" name=\"province\" value={this.state.location.province} onChange={this.handleLocation} />\n                        <label htmlFor=\"Location\">Postal Code</label>\n                        <input type=\"text\" className=\"form-control\" name=\"postalCode\" value={this.state.location.postalCode} onChange={this.handleLocation} />\n\n                        <label htmlFor=\"Salary\">Salary per month</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"$CAD\" id=\"SALARY\" value={this.state.salary} onChange={this.handleSalary} />\n\n                        <label htmlFor=\"Salary\">Deadline</label>\n                        <input type=\"date\" className=\"form-control\" id=\"deadline\" value={this.state.deadline} onChange={this.handleDeadline} />\n                    </div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleJobCreation}>Edit Job</button>\n                    <br/>\n                    <br/>\n                </form>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}