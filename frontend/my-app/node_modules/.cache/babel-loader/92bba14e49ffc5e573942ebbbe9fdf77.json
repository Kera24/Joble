{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer pc\\\\Desktop\\\\Zelthy\\\\Assesment\\\\joble\\\\frontend\\\\my-app\\\\src\\\\Company\\\\CompanyReview.js\";\n// Tabs needed: Create job, View Job,\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import './CompanyInfo.css';\n\nexport default class CompanyReview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayReviewForm: false,\n      displayReviews: true,\n      reviews: [{\n        reviewStars: 1,\n        reviewDesc: '',\n        user: \"\"\n      }],\n      givenStars: 3,\n      givenDesc: \"\",\n      viewReviewsError: \"\"\n    };\n    this.addReview = this.addReview.bind(this);\n    this.postReview = this.postReview.bind(this);\n    this.handleStars = this.handleStars.bind(this);\n    this.handleReviewDesc = this.handleReviewDesc.bind(this);\n    this.getReviews();\n  }\n\n  addReview() {\n    this.setState({\n      displayReviewForm: true\n    });\n  }\n\n  handleStars(event) {\n    this.setState({\n      givenStars: event.target.value\n    });\n  }\n\n  handleReviewDesc(event) {\n    this.setState({\n      givenDesc: event.target.value\n    });\n  }\n\n  postReview() {\n    const review = {\n      userName: this.props.userInfo.userName,\n      companyName: this.props.companyInfo.name,\n      stars: this.state.givenStars,\n      desc: this.state.givenDesc\n    };\n    axios.post(`/reviews/addReview`, review).then(res => {\n      console.log(res.data); // display success message and ask if wanna go back\n\n      this.getReviews();\n    }).catch(err => {\n      document.getElementById(\"viewReviewsError\").style.color = \"red\";\n      this.setState({\n        displayReviewForm: false,\n        displayReviews: false,\n        viewReviewsError: \"There was a problem completing your request. Please try again later.\"\n      });\n      window.scrollTo(0, 0);\n    });\n  }\n\n  getReviews() {\n    axios.get(`/reviews/getReviews?companyName=${this.props.companyInfo.name}`).then(res => {\n      console.log(res.data);\n\n      if (!res.data.length) {\n        this.setState({\n          displayReviewForm: true,\n          // no reviews to show so add your own\n          displayReviews: false,\n          viewReviewsError: \"\"\n        });\n      } else {\n        // reviews exist\n        let currentReviews = [];\n        res.data.forEach(review => {\n          let newReview = {\n            reviewStars: review.stars,\n            reviewDesc: review.desc,\n            user: review.user\n          };\n          currentReviews.push(newReview);\n        });\n        this.setState({\n          reviews: currentReviews.reverse(),\n          displayReviewForm: false,\n          displayReviews: true\n        });\n      }\n    }).catch(err => {\n      // display error message\n      document.getElementById(\"viewCompany\").style.color = \"red\";\n      this.setState({\n        displayReviewForm: false,\n        displayReviews: false,\n        viewReviewsError: \"There was a problem completing your request. Please try again later.\"\n      });\n      window.scrollTo(0, 0);\n    });\n  }\n\n  render() {\n    let componentToServe;\n\n    if (this.state.viewReviewsError === \"\" && this.state.displayReviewForm) {\n      if (this.props.userInfo.userType !== 'recruiter') {\n        componentToServe = /*#__PURE__*/React.createElement(\"form\", {\n          className: \"myForm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"stars\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, \"Rating [1-5]\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"range\",\n          className: \"form-control\",\n          id: \"reviewStars\",\n          min: \"1\",\n          max: \"5\",\n          value: this.state.givenStars,\n          onChange: this.handleStars,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"desc\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }\n        }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          rows: \"10\",\n          cols: \"75\",\n          className: \"form-control\",\n          id: \"reviewDesc\",\n          value: this.state.givenDesc,\n          onChange: this.handleReviewDesc,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.postReview,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }\n        }, \"Post\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => this.setState({\n            displayReviewForm: false,\n            displayReviews: true\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }\n        }, \"View Reviews\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 22\n          }\n        }));\n      } else {\n        componentToServe = /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }\n        }, \"No reviews added!\");\n      }\n    } else if (this.state.viewReviewsError === \"\" && this.state.displayReviews) {\n      componentToServe = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, this.state.reviews.map((review, ind) => /*#__PURE__*/React.createElement(\"a\", {\n        key: ind,\n        href: \"/#\",\n        id: \"review-list\",\n        className: \"list-group-item list-group-item-action flex-column align-items-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex w-100 justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, review.user), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, \"Rating: \", review.reviewStars)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, review.reviewDesc))));\n    } else {\n      componentToServe = /*#__PURE__*/React.createElement(\"p\", {\n        id: \"viewReviewsError\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 32\n        }\n      }, this.state.viewReviewsError);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, this.props.userInfo.userType !== 'recruiter' && /*#__PURE__*/React.createElement(\"button\", {\n      id: \"add-review\",\n      class: \"btn btn-primary float-right\",\n      onClick: this.addReview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 66\n      }\n    }, \"Add review\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Reviews\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), componentToServe));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/acer pc/Desktop/Zelthy/Assesment/joble/frontend/my-app/src/Company/CompanyReview.js"],"names":["React","Component","axios","CompanyReview","constructor","props","state","displayReviewForm","displayReviews","reviews","reviewStars","reviewDesc","user","givenStars","givenDesc","viewReviewsError","addReview","bind","postReview","handleStars","handleReviewDesc","getReviews","setState","event","target","value","review","userName","userInfo","companyName","companyInfo","name","stars","desc","post","then","res","console","log","data","catch","err","document","getElementById","style","color","window","scrollTo","get","length","currentReviews","forEach","newReview","push","reverse","render","componentToServe","userType","map","ind"],"mappings":"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","sourcesContent":["// Tabs needed: Create job, View Job,\nimport React, { Component } from 'react';\nimport axios from 'axios';\n// import './CompanyInfo.css';\n\nexport default class CompanyReview extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            displayReviewForm: false,\n            displayReviews: true,\n            reviews: [ {\n                reviewStars: 1,\n                reviewDesc: '',\n                user: \"\",\n            }],\n            givenStars: 3,\n            givenDesc: \"\",\n            viewReviewsError: \"\",\n        }\n\n        this.addReview = this.addReview.bind(this);\n        this.postReview = this.postReview.bind(this);\n        this.handleStars = this.handleStars.bind(this);\n        this.handleReviewDesc = this.handleReviewDesc.bind(this);\n\n        this.getReviews();\n    }\n\n    addReview() {\n        this.setState({displayReviewForm: true});\n    }\n\n    handleStars(event) {\n        this.setState({givenStars: event.target.value});\n    }\n\n    handleReviewDesc(event) {\n        this.setState({givenDesc: event.target.value});\n    }\n\n    postReview() {\n\n        const review = {\n            userName: this.props.userInfo.userName,\n            companyName: this.props.companyInfo.name,\n            stars: this.state.givenStars,\n            desc: this.state.givenDesc,\n        }\n\n        axios.post(`/reviews/addReview`, review)\n        .then((res) => {\n            console.log(res.data);\n            // display success message and ask if wanna go back\n            this.getReviews();\n        })\n        .catch((err) => {\n            document.getElementById(\"viewReviewsError\").style.color = \"red\";\n            this.setState({\n                displayReviewForm: false,\n                displayReviews: false,\n                viewReviewsError: \"There was a problem completing your request. Please try again later.\",\n            });\n            window.scrollTo(0, 0);\n        });\n    }\n\n    getReviews() {\n        axios.get(`/reviews/getReviews?companyName=${this.props.companyInfo.name}`)\n        .then((res) => {\n            console.log(res.data);\n\n            if (! res.data.length) {\n                this.setState({\n                    displayReviewForm: true,        // no reviews to show so add your own\n                    displayReviews: false,\n                    viewReviewsError: \"\",\n                });\n            } else {\n                // reviews exist\n                let currentReviews = [];\n                res.data.forEach((review) => {\n                    let newReview = {\n                        reviewStars: review.stars,\n                        reviewDesc: review.desc,\n                        user: review.user,\n                    };\n\n                    currentReviews.push(newReview);\n                });\n\n                this.setState({\n                    reviews: currentReviews.reverse(),\n                    displayReviewForm: false,\n                    displayReviews: true,\n                });\n            }\n        })\n        .catch((err) => {\n            // display error message\n            document.getElementById(\"viewCompany\").style.color = \"red\";\n            this.setState({\n                displayReviewForm: false,\n                displayReviews: false,\n                viewReviewsError: \"There was a problem completing your request. Please try again later.\",\n            });\n            window.scrollTo(0, 0);\n        });\n    }\n\n    render() {\n        let componentToServe;\n\n        if (this.state.viewReviewsError === \"\" && this.state.displayReviewForm) {\n            if (this.props.userInfo.userType !== 'recruiter') {\n                componentToServe = (<form className=\"myForm\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"stars\">Rating [1-5]</label>\n                    <input type=\"range\" className=\"form-control\" id=\"reviewStars\" min=\"1\" max=\"5\" value={this.state.givenStars} onChange={this.handleStars}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"desc\">Description</label>\n                    <textarea rows=\"10\" cols=\"75\" className=\"form-control\" id=\"reviewDesc\" value={this.state.givenDesc} onChange={this.handleReviewDesc} />\n                </div>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.postReview}>Post</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.setState({displayReviewForm: false, displayReviews: true})}>View Reviews</button>\n                <br/><br/>\n                </form>);\n            } else {\n                componentToServe = (\n                <h5>No reviews added!</h5>);\n            }\n        } else if (this.state.viewReviewsError === \"\" && this.state.displayReviews) {\n            componentToServe =  <div className=\"list-group\">\n            {this.state.reviews.map((review, ind) => (\n                <a key={ind} href=\"/#\" id=\"review-list\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                    <div className=\"d-flex w-100 justify-content-between\">\n                    <h5>{review.user}</h5>\n                    <small>Rating: {review.reviewStars}</small>\n                    </div>\n                    <p>{review.reviewDesc}</p>\n                </a>\n            ))}</div>;\n        } else {\n            componentToServe = <p id=\"viewReviewsError\">{this.state.viewReviewsError}</p>\n        }\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                {this.props.userInfo.userType !== 'recruiter' && <button id=\"add-review\" class=\"btn btn-primary float-right\" onClick={this.addReview}>Add review</button>}\n                <h3>Reviews</h3>\n                <br/>\n                <hr/>\n                {componentToServe}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}