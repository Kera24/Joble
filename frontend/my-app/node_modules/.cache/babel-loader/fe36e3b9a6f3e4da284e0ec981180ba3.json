{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer pc\\\\Desktop\\\\Zelthy\\\\Assesment\\\\joble\\\\frontend\\\\my-app\\\\src\\\\Jobs\\\\ViewJobs.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './ViewJobs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ViewJobs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.applyCompanyFilter = () => {\n      var orders = document.getElementsByName(\"deadline-order\");\n      [...orders][0].selected = true;\n      var companies = document.getElementsByName(\"company\");\n      let company = [...companies].find(company => {\n        return company.selected === true;\n      }).value;\n      let filteredJobs = [];\n\n      if (company !== \"all\") {\n        filteredJobs = this.state.allJobs.filter(job => {\n          return job.companyName === company;\n        });\n      } else {\n        filteredJobs = this.state.allJobs;\n      }\n\n      const output = filteredJobs.map((item, index) => {\n        return new Date(item[\"deadline\"]).getTime() > new Date().getTime() && /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => this.props.onSelectJob(item),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"jobTitle\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"companyName\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"createdAt\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"deadline\"] ? new Date(item[\"deadline\"]).toLocaleString() : \"Not specified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this);\n      });\n      this.setState({\n        jobs: output,\n        jobsClean: filteredJobs\n      });\n    };\n\n    this.changeDeadline = () => {\n      var orders = document.getElementsByName(\"deadline-order\");\n      let order = [...orders].find(order => {\n        return order.selected === true;\n      }).value;\n      const companiesArray = this.state.companies;\n      const currjobs = this.state.jobsClean;\n      currjobs.sort((a, b) => {\n        if (order == 0) {\n          return new Date(a.deadline) - new Date(b.deadline);\n        } else {\n          return new Date(b.deadline) - new Date(a.deadline);\n        }\n      });\n      const output = currjobs.map((item, index) => {\n        return new Date(item[\"deadline\"]).getTime() > new Date().getTime() && /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => this.props.onSelectJob(item),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"jobTitle\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"companyName\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"createdAt\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[\"deadline\"] ? new Date(item[\"deadline\"]).toLocaleString() : \"Not specified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this);\n      });\n      this.setState({\n        jobs: output,\n        companies: companiesArray\n      });\n    };\n\n    this.state = {\n      jobs: [],\n      allJobs: [],\n      companies: [],\n      jobsClean: []\n    };\n    this.getJobs = this.getJobs.bind(this);\n    this.printJobs = this.printJobs.bind(this);\n    this.getJobs();\n  }\n\n  getJobs() {\n    axios.get(`/jobs/viewJobs?companyName=${this.props.companyName}`).then(res => {\n      //console.log(res);\n      this.printJobs(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  printJobs(jobs) {\n    let companiesArray = [];\n    jobs.sort((a, b) => {\n      return new Date(a.deadline) - new Date(b.deadline);\n    });\n    jobs.forEach(job => {\n      if (companiesArray.indexOf(job.companyName) === -1) {\n        companiesArray.push(job.companyName);\n      }\n    });\n    const output = jobs.map((item, index) => {\n      console.log(item);\n      return new Date(item[\"deadline\"]).getTime() > new Date().getTime() && /*#__PURE__*/_jsxDEV(\"tr\", {\n        onClick: () => this.props.onSelectJob(item),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"jobTitle\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"companyName\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"createdAt\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item[\"deadline\"] ? new Date(item[\"deadline\"]).toLocaleString() : \"Not specified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    });\n    this.setState({\n      jobs: output,\n      allJobs: jobs,\n      jobsClean: jobs,\n      companies: companiesArray\n    });\n  }\n\n  render() {\n    if (Array.isArray(this.state.jobs) && this.state.jobs.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Active Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 31\n        }, this), this.props.companyName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have not posted any jobs yet!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 38\n        }, this), !this.props.companyName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No active listings to show. Try again later!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Active Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table customStyle\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 11\n            }, this), !this.props.companyName && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"custom-select mr-sm-2\",\n                onChange: this.applyCompanyFilter,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"company\",\n                  value: \"all\",\n                  defaultValue: true,\n                  children: \"All companies\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 13\n                }, this), this.state.companies.map((company, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    name: \"company\",\n                    value: company,\n                    children: company\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 24\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 11\n            }, this), this.props.companyName && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"custom-select mr-sm-2\",\n                onChange: this.changeDeadline,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"deadline-order\",\n                  value: \"0\",\n                  defaultValue: true,\n                  children: \"Deadline (earliest)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  name: \"deadline-order\",\n                  value: \"1\",\n                  children: \"Deadline (latest)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.jobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/acer pc/Desktop/Zelthy/Assesment/joble/frontend/my-app/src/Jobs/ViewJobs.js"],"names":["React","Component","axios","ViewJobs","constructor","props","applyCompanyFilter","orders","document","getElementsByName","selected","companies","company","find","value","filteredJobs","state","allJobs","filter","job","companyName","output","map","item","index","Date","getTime","onSelectJob","toLocaleString","setState","jobs","jobsClean","changeDeadline","order","companiesArray","currjobs","sort","a","b","deadline","getJobs","bind","printJobs","get","then","res","data","catch","err","console","log","forEach","indexOf","push","render","Array","isArray","length","i"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './ViewJobs.css'\n\nexport default class ViewJobs extends Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        jobs: [],\n        allJobs: [],\n        companies: [],\n        jobsClean: [],\n      };\n\n      this.getJobs = this.getJobs.bind(this);\n      this.printJobs = this.printJobs.bind(this);\n      this.getJobs();\n  }\n\n  getJobs() {\n\n    axios.get(`/jobs/viewJobs?companyName=${this.props.companyName}`)\n      .then(res => {\n        //console.log(res);\n        this.printJobs(res.data)\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  printJobs(jobs) {\n    let companiesArray = [];\n\n    jobs.sort((a, b) => {\n      return new Date(a.deadline) - new Date(b.deadline);\n    });\n\n    jobs.forEach((job) => {\n      if(companiesArray.indexOf(job.companyName) === -1) {\n        companiesArray.push(job.companyName);\n      }\n    });\n\n    const output = jobs.map((item,index) => {\n      console.log(item);\n      return (new Date(item[\"deadline\"]).getTime() > new Date().getTime() &&\n        <tr key={index} onClick={() => this.props.onSelectJob(item)}>\n          <td>\n            { item[\"jobTitle\"] }\n          </td>\n          <td>\n            { item[\"companyName\"] }\n          </td>\n          <td>\n            { item[\"createdAt\"] }\n          </td>\n          <td>\n            { item[\"deadline\"] ? new Date(item[\"deadline\"]).toLocaleString() : \"Not specified\"}\n          </td>\n        </tr>\n      )\n    });\n\n    this.setState({\n      jobs: output,\n      allJobs: jobs,\n      jobsClean: jobs,\n      companies: companiesArray,\n    });\n  }\n\n  applyCompanyFilter = () => {\n    var orders = document.getElementsByName(\"deadline-order\");\n    [...orders][0].selected = true;\n\n    var companies = document.getElementsByName(\"company\");\n    let company = [...companies].find((company) => {\n      return (company.selected === true)\n    }).value;\n\n    let filteredJobs = [];\n    if (company !== \"all\") {\n      filteredJobs = this.state.allJobs.filter((job) => {\n        return job.companyName === company;\n      });\n    } else {\n      filteredJobs = this.state.allJobs;\n    }\n\n    const output = filteredJobs.map((item,index) => {\n      return (new Date(item[\"deadline\"]).getTime() > new Date().getTime() &&\n        <tr key={index} onClick={() => this.props.onSelectJob(item)}>\n          <td>\n            { item[\"jobTitle\"] }\n          </td>\n          <td>\n            { item[\"companyName\"] }\n          </td>\n          <td>\n            { item[\"createdAt\"] }\n          </td>\n          <td>\n            { item[\"deadline\"] ? new Date(item[\"deadline\"]).toLocaleString() : \"Not specified\"}\n          </td>\n        </tr>\n      )\n    });\n\n    this.setState({\n      jobs: output,\n      jobsClean: filteredJobs,\n    });\n  }\n\n  changeDeadline = () => {\n    var orders = document.getElementsByName(\"deadline-order\");\n    let order = [...orders].find((order) => {\n      return (order.selected === true)\n    }).value;\n\n    const companiesArray = this.state.companies;\n    const currjobs = this.state.jobsClean;\n    currjobs.sort((a, b) => {\n      if (order == 0) {\n        return new Date(a.deadline) - new Date(b.deadline);\n      } else {\n        return new Date(b.deadline) - new Date(a.deadline);\n      }\n    });\n\n    const output = currjobs.map((item,index) => {\n      return (new Date(item[\"deadline\"]).getTime() > new Date().getTime() &&\n        <tr key={index} onClick={() => this.props.onSelectJob(item)}>\n          <td>\n            { item[\"jobTitle\"] }\n          </td>\n          <td>\n            { item[\"companyName\"] }\n          </td>\n          <td>\n            { item[\"createdAt\"] }\n          </td>\n          <td>\n            { item[\"deadline\"] ? new Date(item[\"deadline\"]).toLocaleString() : \"Not specified\"}\n          </td>\n        </tr>\n      )\n    });\n\n    this.setState({\n      jobs: output,\n      companies: companiesArray,\n    });\n  }\n\n  render() {\n    if(Array.isArray(this.state.jobs) && this.state.jobs.length === 0) {\n      return (\n        <div className=\"container\">\n          <h1>Active Jobs</h1><br />\n          {this.props.companyName && <p>You have not posted any jobs yet!</p>}\n          {! this.props.companyName && <p>No active listings to show. Try again later!</p>}\n        </div>\n      );\n    }\n    return (\n      <div className=\"container\">\n      <h1>Active Jobs</h1>\n      <br/>\n      <br/>\n     <table className=\"table customStyle\">\n      <thead>\n        <tr>\n          <th>Job Title</th>\n          {! this.props.companyName &&\n          <th>\n          <select className=\"custom-select mr-sm-2\" onChange={this.applyCompanyFilter}>\n            <option name=\"company\" value=\"all\" defaultValue>All companies</option>\n            {\n              this.state.companies.map((company, i) => {\n                return <option name=\"company\" value={company} key={i}>{company}</option>\n              })\n            }\n          </select>\n          </th>\n          }\n          {this.props.companyName &&\n          <th>Company</th>\n          }\n          <th>Created At</th>\n          <th>\n          <select className=\"custom-select mr-sm-2\" onChange={this.changeDeadline}>\n            <option name=\"deadline-order\" value=\"0\" defaultValue>Deadline (earliest)</option>\n            <option name=\"deadline-order\" value=\"1\" >Deadline (latest)</option>\n          </select>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        { this.state.jobs }\n      </tbody>\n      </table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}